# THIS IS A GENERATED COMPONENT CONFIG EXAMPLE FILE THAT SHOWS
# THIS COMPONENT'S CONFIG OPTIONS.

# Ammo component maps different XC combat plugin ammos inserted into the
# vehicle to a unique gun type. Gun shooting system will check the current
# ammo and gun type stored inside this component.
# 
# To support vehicles with multiple gun types and different ammo capacity,
# and where some ammo types are mutually exclusive. So the ammo types
# and data storage are divided into ammo "groups", e.g. for a tank:
# 
#     [Group 1]: main gun, the ammos and guns below are mutually exclusive
#         max_ammo = 1
#         types =       [AMMO_ID_AP, AMMO_ID_HE, AMMO_ID_POISON, AMMO_ID_GRENADE]
#         weapon_id =   [GUN_ID_AP,  GUN_ID_HE,  GUN_ID_POISON,  THROW_ID_GRENADE]
#         weapon_type = [GUN,        GUN,        GUN,         ,  THROWABLE]
#     [Group 2]: machinegun
#         max_ammo = 128
#         types =       [AMMO_ID_MACHINEGUN]
#         weapon_id =   [GUN_ID_MACHINEGUN]
#         weapon_type = [GUN]
# 
# The parameters in each group form a struct of arrays where each index
# corresponds to the group's tuple of (ammo, weapon_id, weapon_type).
# 
# `weapon_type` supports mapping ammo to either guns or throwable weapons
# from XC.
# 
# For this example, the tank vehicle supports both groups of ammo.
# When a player loads ammo, it is routed and loaded into the correct group.
# When a player shoots, the firing component config (e.g. the gun turret)
# can map which user control maps to which group, e.g. [SPACE] to group 2
# and [LEFT_CLICK] to group 1.
# 
# TODO: can make reload inside and reload times configurable per grou

[ammo]

# ============ AMMO GROUPS STRUCT OF ARRAYS ============
# max ammo in each group, each index corresponds to an ammo group
max = []

# current ammo in each group, each index corresponds to an ammo group
current = []

# current type loaded in each group, each index corresponds to an ammo group
current_type = arrayOf()

# amount of ammo per item for each group, each index corresponds to an ammo group
amount_per_item = []

# ======================================================
# flattened list of all valid types
valid_types = arrayOf()

# drop fuel item instead of storing into item during despawn
drop_item = true

# can load inside vehicle
can_reload_inside = true

# time to reload inside vehicle in milliseconds
time_reload_inside = 2000

# can load from outside by interacting
can_reload_outside = true

# time to reload from outside in milliseconds
time_reload_outside = 2000

# if true, immediately fires if ammo available
fire_when_loaded = false